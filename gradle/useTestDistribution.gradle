/*
 * Copyright 2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        maven {
            url = uri("https://repo.gradle.org/gradle/enterprise-libs-snapshots-local")
            credentials {
                username = project.findProperty("enterprise.snapshots.username")?.toString() ?: System.getenv("ARTIFACTORY_USERNAME")
                password = project.findProperty("enterprise.snapshots.password")?.toString() ?: System.getenv("ARTIFACTORY_PASSWORD")
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    dependencies {
        classpath("com.gradle:test-distribution-gradle-plugin:1.0-20200316160259-master")
    }
}

plugins.withId("java") {
    apply plugin: com.gradle.testdistribution.gradle.plugin.TestDistributionPlugin

    tasks.withType(Test).configureEach {
        forkEvery = 14
        testLogging {
            events("PASSED", "FAILED", "SKIPPED")
            displayGranularity = 0
        }
        distribution {
            enabled = true
            useLocalExecutor = project.hasProperty('useLocalExecutors') ? Boolean.valueOf(project.getProperty('useLocalExecutors')) : true
            server {
                url = uri("https://ge-experiment.grdev.net")
            }
            requirements = ["os=linux", "jdk=8", "jdk=11"]
        }
    }
}
